---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + subpath?.[0];
const label = props["aria-label"] || props.title;
// Add missing trailing slash to href
const link =
  typeof href === "string" && href
    ? href.endsWith("/")
      ? href
      : href + "/"
    : "/";
---

<a
  href={link}
  class:list={[className, { active: isActive }]}
  {...props}
  data-tooltip={label}
  data-placement="bottom"
>
  <slot />
  <!-- {isActive && <span>{label}</span>} -->
</a>
<style>
  a {
    display: inline-block;
    text-decoration: none;
  }
  a.active {
    font-weight: bolder;
    text-decoration: underline;
  }
</style>
