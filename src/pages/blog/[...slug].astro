---
import "../../styles/pretty-code.css";
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import type { MarkdownHeading } from "astro";

export async function getStaticPaths() {
  var posts = await getCollection("blog");
  posts = posts.filter(({ data }) =>
    import.meta.env.PROD ? data.draft !== true : true
  );
  posts.sort((a, b) => {
    const dateA = a.data.lastUpdated
      ? new Date(a.data.lastUpdated)
      : new Date(a.data.pubDate);
    const dateB = b.data.lastUpdated
      ? new Date(b.data.lastUpdated)
      : new Date(b.data.pubDate);
    return dateB.valueOf() - dateA.valueOf();
  });

  const headings = await Promise.all(
    posts.map(async (post) => {
      const data = await post.render();
      return data.headings;
    })
  );

  return posts.map((post, index) => ({
    params: { slug: post.slug },
    props: { post, headings: headings[index] },
  }));
}
type Props = {
  post: CollectionEntry<"blog">;
  headings: MarkdownHeading[];
};

const { post, headings } = Astro.props;
const { Content } = await post.render();
---

<BlogPost {...post.data} headings={headings}>
  <Content />
</BlogPost>
